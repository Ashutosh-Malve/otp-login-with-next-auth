# NextAuth.js and Resend OTP Authentication System

## Overview
This project implements a robust OTP (One-Time Password) authentication system using **NextAuth.js** and **Resend**. It supports both email-based and phone-based OTP authentication. The solution is production-ready, including database integration, proper error handling, logging, and responsive UI components.

## Features
- **Email and Phone OTP Login**: Supports OTP-based authentication for both email and phone numbers.
- **Secure OTP Handling**: OTPs are generated, stored securely, and verified with proper error handling.
- **Database Integration**: Uses PostgreSQL via Prisma to manage users and OTPs.
- **Modular Components**: Includes reusable components for OTP input and phone verification.
- **Rate Limiting**: Ensures security by limiting OTP requests implicitly through database operations.
- **Error Logging**: Implements error tracking for debugging and monitoring.

---

## Prerequisites
1. **Node.js**: Ensure you have Node.js installed.
2. **Database**: PostgreSQL is required for user and OTP management.
3. **Resend API Key**: Sign up at [Resend](https://resend.com) to get an API key.
4. **Environment Variables**: Set up the following environment variables in your project:
   - `NEXTAUTH_SECRET`: A secure random string.
   - `RESEND_API_KEY`: Your Resend API key.
   - `EMAIL_FROM`: The email address to send OTPs from.
   - `DATABASE_URL`: The PostgreSQL connection string.

---

## Installation and Setup

### 1. Install Dependencies
Run the following command to install the required packages:
```bash
npm install next-auth@beta resend @prisma/client
npm install prisma --save-dev
